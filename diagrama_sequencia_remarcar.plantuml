@startuml
actor Usuario as Foo1
boundary "Interface de Login" as Foo2
control "Controlador de Login" as FooCtrl
participant ":Login" as Foo3
boundary "Interface de Gerenciamento" as Foo9
control "Controlador de Agenda/Consultas" as Foo4
participant ":Desmarcar" as Foo5
participant ":Marcar" as Foo8
participant ":Cadastro" as Foo6
database ":bancoConsultas" as Foo7

Foo1 -> Foo2 : e-mail
Foo1 -> Foo2 : senha
Foo2 -> FooCtrl : Enviar credenciais
FooCtrl -> Foo3 : Validar credenciais
FooCtrl <-- Foo3 : Credenciais Válidas?

alt login válido

    FooCtrl -> Foo3: verifica_tipo_usuario(id_usuario)
    Foo3 --> Foo9 : role:string

    alt usuário é paciente
        Foo4 -> Foo7 : get_horarios_marcados(ID_paciente)
        Foo7 --> Foo4 : horarios:list
        Foo4 --> Foo9 : horarios:list

        alt existem horários marcados

            Foo9 --> Foo1 : Exibir horários marcados

            Foo1 -> Foo9 : Escolhe um horário
            Foo9 -> Foo4 : Escolhe um horário
            Foo4 -> Foo5 : desmarcar_consulta()
            Foo5 -> Foo7 : remover_consulta(ID_paciente)
            Foo7 --> Foo5 : verdadeiro:boolean
            Foo5 --> Foo4 : verdadeiro:boolean

            Foo4 -> Foo7 : get_horarios_disponiveis(ID_psicologo)
            Foo7 --> Foo4 : horarios:list
            Foo4 --> Foo9 : horarios:list

            alt existem horários disponíveis

                Foo9 --> Foo1 : Exibir horários disponíveis

                Foo1 -> Foo9 : Escolhe um horário
                Foo9 -> Foo4 : Escolhe um horário
                Foo4 -> Foo8 : marcar_consulta(ID_paciente)
                Foo8 -> Foo7 : inserir_consulta(ID_paciente)
                Foo7 --> Foo8 : verdadeiro:boolean
                Foo8 --> Foo4 : verdadeiro:boolean

            else não existe horário disponível
                Foo8 --> Foo4 : "sem horários disponíveis"
                Foo4 --> Foo9 : Enviar mensagem de erro
                Foo9 --> Foo1 : Enviar mensagem de erro ao usuário

            end

        else não existe consulta marcada
            Foo5 --> Foo4 : "sem consultas marcadas"
            Foo4 --> Foo9 : Enviar mensagem de erro
            Foo9 --> Foo1 : Enviar mensagem de erro ao usuário

        end

    else usuário é psicologo

        Foo4 -> Foo7 : get_horarios_marcados(ID_paciente) : filter by ID_psicologo
        Foo7 --> Foo4 : horarios:list
        Foo4 --> Foo9 : horarios:list

        alt existem horários marcados

            Foo9 --> Foo1 : Exibir horários marcados

            Foo1 -> Foo9 : Escolhe um horário
            Foo9 -> Foo4 : Escolhe um horário
            Foo4 -> Foo5 : desmarcar_consulta()
            Foo5 -> Foo7 : remover_consulta(ID_paciente)
            Foo7 --> Foo5 : verdadeiro:boolean
            Foo5 --> Foo4 : verdadeiro:boolean

            Foo4 -> Foo7 : get_horarios_disponiveis(ID_psicologo)
            Foo7 --> Foo4 : horarios:list
            Foo4 --> Foo9 : horarios:list

            alt existem horários disponíveis

                Foo9 --> Foo1 : Exibir horários disponíveis

                Foo1 -> Foo9 : Escolhe um horário
                Foo9 -> Foo4 : Escolhe um horário
                Foo4 -> Foo8 : marcar_consulta(ID_paciente)
                Foo5 -> Foo7 : inserir_consulta(ID_paciente)
                Foo7 --> Foo5 : verdadeiro:boolean
                Foo5 --> Foo4 : verdadeiro:boolean

            else não existe horário disponível
                Foo5 --> Foo4 : "sem horários disponíveis"
                Foo4 --> Foo9 : Enviar mensagem de erro
                Foo9 --> Foo1 : Enviar mensagem de erro ao usuário

            end

        else não existe consulta marcada
            Foo5 --> Foo4 : "sem consultas marcadas"
            Foo4 --> Foo9 : Enviar mensagem de erro
            Foo9 --> Foo1 : Enviar mensagem de erro ao usuário

        end

    end




else perda de senha

    Foo1 -> Foo2 : Solicitação de recuperação de senha
    Foo2 -> FooCtrl : Enviar solicitação de recuperação
    FooCtrl -> Foo3 : recuperar_senha(email)
    FooCtrl --> Foo2 : Link de recuperação enviado

else usuário não cadastrado

    Foo1 -> Foo2 : Criar cadastro
    Foo2 -> FooCtrl : Dados da criação de cadastro
    FooCtrl -> Foo6 : criar_cadatro(dados)
    Foo6 --> FooCtrl : Cadastro criado com sucesso
    FooCtrl --> Foo2 : Notificar sucesso no cadastro
    Foo2 --> Foo1 : Notificar sucesso no cadastro

end
@enduml
